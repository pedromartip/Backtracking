/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package motxilla;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import static motxilla.omplirMotxilla.omplirMotxilla;

/**
 *
 * @author pedromarti
 */
public class Inici extends javax.swing.JFrame {

    private Motxilla m;
    private ArrayList<Objecte> objectes = new ArrayList<Objecte>();

    public Inici() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        valor = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pes = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        valorMaxMotxilla = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("JOC DEL PROBLEMA DE LA MOTXILLA 0/1");

        jLabel2.setText("Valor");

        jLabel3.setText("Pes");

        jButton1.setText("Afegir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Pes màxim de la motxilla :");

        jButton3.setBackground(new java.awt.Color(255, 51, 0));
        jButton3.setText("Sortir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 153, 255));
        jButton2.setText("Començar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pes, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(177, 177, 177))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(valorMaxMotxilla, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorMaxMotxilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jButton1)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Action Listenner del botó Començar
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.out.println("Pes maxim de la motxilla: " + (int) valorMaxMotxilla.getValue());

        Motxilla motxilla = new Motxilla(objectes.size(), (int) valorMaxMotxilla.getValue());
        Motxilla motxillaOptima = new Motxilla(objectes.size(), (int) valorMaxMotxilla.getValue());
        ArrayList<Motxilla> motxillesOptimes = new ArrayList<Motxilla>();
        
        Objecte o = new Objecte(((int)valorMaxMotxilla.getValue()+1),20);
        objectes.add(o);
        
        omplirMotxilla(motxilla, motxillaOptima, objectes, false);

        /*Afegim la motxilla optima a l'array de motxilles optimes, i
        l'utilitzam de referencia per trobar les altres, en el cas 
        de que n'hi hagui. */
        if (motxillaOptima.getBenefici() != 0) {
            motxillesOptimes.add(motxillaOptima);

            //Imprimim tots els objectes de la motxilla optima
//            System.out.println("--------DADES DE LA MOTXILLA OPTIMA--------");
//            System.out.println("Els objectes que té:");
            int n = motxillaOptima.printObjectesMotxilla(); //IMPORTANT NO BORRAR PEL FUNCIONAMENT
//            System.out.println("El seu pes total i valor:");
//            System.out.println(motxillaOptima.toString());
//            System.out.println("--------------------------------------");
            System.out.println("****** PROCES PER TROBAR ALTRES POSIBLES SOLUCIONS ******\n");

            //Copiam l'array d'ojectes general
            Motxilla motxillaOptimaAux = motxillaOptima;
            Objecte[] arrayObjectes = new Objecte[objectes.size()];
            for (int i = 0; i < objectes.size(); i++) {
                arrayObjectes[i] = objectes.get(i);
            }

            //Copiam l'array d'objectes de la motxilla
            Objecte[] arrayObjectesMotxOpt = new Objecte[n];
            System.out.println("Objectes de la motxilla: " + arrayObjectesMotxOpt.length);
            int w = 0;

            for (int i = 0; i < motxillaOptima.getObjectes().length && w != n; i++) {

                if (motxillaOptima.getObjectes()[i] != null) {
                    arrayObjectesMotxOpt[w] = motxillaOptima.getObjectes()[i];
                    w++;
                }
            }

            for (int i = 0; i < arrayObjectesMotxOpt.length; i++) {
                System.out.println("Objecte " + i + ": " + arrayObjectesMotxOpt[i].toString()+"\n");
            }

            /* Recorrem tots els objectes de la motxilla optima que hem trobat, de tal
        manera que "borram" temporalment cada un dels objectes (un per un), de manera
        que farem l'algoritme de backtracking fora aquell objecte, per averiguar 
        si podem fer una altra motxilla igual d'òptima que la primera que 
        s'ha trobat*/
            ArrayList<Objecte> objectesAux = new ArrayList<Objecte>();
            for (int i = 0; i < arrayObjectesMotxOpt.length; i++) {
                for (int j = 0; j < arrayObjectes.length; j++) {

                    System.out.println("----- OP: Comparam ------");
                    System.out.println("arrayObjectesMotxOpt[i]: " + arrayObjectesMotxOpt[i].toString());
                    System.out.println("arrayObjectes[i]: " + arrayObjectes[i].toString());
                    System.out.println("i: " + i + ", j: " + j);

                    if (!arrayObjectesMotxOpt[i].comparaObjecte(arrayObjectes[j])) {
                        System.out.println("Lo meto: ");
                        objectesAux.add(objectes.get(j));
                    }
                    System.out.println("-------------------------\n");
                }
                
                System.out.println("La novaa arrayList té: ");
                for (int j = 0; j < objectesAux.size(); j++) {
                    System.out.println(objectesAux.get(j).toString());
                }
                
                //Tornam a fer l'agoritme de backtracking
                Motxilla motxillaNova = new Motxilla(objectesAux.size(), (int) valorMaxMotxilla.getValue());
                Motxilla motxillaOptimaNova = new Motxilla(objectesAux.size(), (int) valorMaxMotxilla.getValue());
                omplirMotxilla(motxillaNova, motxillaOptimaNova, objectesAux, false);

                System.out.println("--------DADES DE LA MOTXILLA OPTIMA NOVA--------");
                System.out.println("Els objectes que té:");
                motxillaOptimaNova.printObjectesMotxilla();
                System.out.println("El seu pes total i valor:");
                System.out.println(motxillaOptimaNova.toString());
                System.out.println("--------------------------------------");

                /* Si amb diferents pesos, obtenim el mateix benefici i pes, obtenim una
            nova solució de motxilla òptima */
                if (motxillaOptimaAux.compararMotxilla(motxillaOptimaNova)) {
                    motxillesOptimes.add(motxillaOptimaNova);
                    System.out.println("LES MOTXILLES SON IGUALS!!\n");
                }

                objectesAux.clear(); //Buidam l'arrayList 
                System.out.println("Motx opt: " + motxillesOptimes.toString() + "\n");
            }
        }
        
        JOptionPane.showMessageDialog(null, printMotxillesOptimes(motxillesOptimes));
        System.exit(0);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public String printMotxillesOptimes(ArrayList<Motxilla> t) {
        String s = "Hi ha " + t.size() + " motxilla/es òptima/es: \n";
        
        //Si no esta buida, es que hi ha, alemnys, una solució
        if (!t.isEmpty()) {
            for (int i = 0; i < t.size() && !t.isEmpty(); i++) {
                s = s + "Motxilla " + (i + 1) + "\n";

                for (int j = 0; j < t.get(i).getObjectes().length; j++) {

                    if (t.get(i).getObjectes()[j] != null) {
                        s = s + "\tObjecte " + (i + 1) + ": " + t.get(i).getObjectes()[j].toString() + "\n";
                    }
                }
            }
        //Si esta buida, es que no hi ha solució
        } else {
            s = s + " No hi ha solució ";
        }

        return s;
    }

    //Afegir Pesos
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int p = (int) pes.getValue(), v = (int) valor.getValue();
        Objecte e = new Objecte(p, v);
        this.objectes.add(e);
        System.out.println("S'ha afegit el pes " + e.getPes() + " i el benefici " + e.getBenefici());
        pes.setValue(0);
        valor.setValue(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inici.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inici.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inici.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inici.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inici().setVisible(true);
            }
        });
    }

    public JSpinner getjSpinner1() {
        return valor;
    }

    public void setjSpinner1(JSpinner jSpinner1) {
        this.valor = jSpinner1;
    }

    public JSpinner getjSpinner2() {
        return pes;
    }

    public void setjSpinner2(JSpinner jSpinner2) {
        this.pes = jSpinner2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner pes;
    private javax.swing.JSpinner valor;
    private javax.swing.JSpinner valorMaxMotxilla;
    // End of variables declaration//GEN-END:variables
}
